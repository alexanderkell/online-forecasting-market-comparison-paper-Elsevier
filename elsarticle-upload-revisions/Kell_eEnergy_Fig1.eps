%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 668.000000 388.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 668 388
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 668 388
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /ellipsis put
dup 34 /period put
dup 35 /I put
dup 36 /n put
dup 37 /p put
dup 38 /u put
dup 39 /t put
dup 40 /s put
dup 41 /H put
dup 42 /i put
dup 43 /d put
dup 44 /e put
dup 45 /space put
dup 46 /U put
dup 47 /O put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<

206A61645258238A592FFD2DB800192C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8001A2C2020456944B001602020457D691844B001602DB8001B2CB8001A2A2DB8001C2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8001D2C4B535845441B2121592D00020033000101CC02C8000300070065B800142BB800082FB800002FB8000810B80006D0B800062FB900020003F4B8000010B900040003F4B80009DC00B800014558B800042F1BB90004000A3E59B800014558B800052F1BB9000500043E59B8000410B900000002F4B8000510B900020002F4303101211121131121110199FECD013333FE67029AFD950299FD3902C700010053000000C2006F0003001BBA0003000000032BB800031000BA0000000100032BB8000010303137153335536F6F6F6F00000001004E0000028402CA000B0047BA000B000000032BB8000B10BA0006000500032BB8000610B8000B10B80002D0B8000510B80008D000B800002FB800072FB800012FB800052FBA000A000300032BB8000A1030311311331121113311231121114E5F01785F5FFE8802CAFD360147FEB902CAFECD01330000010052000000B102CA00030017BA0003000000032BB800031000B800012FB800002F303113113311525F02CAFD3602CA00000000020026FFF002D202DB0013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E02851C3C5E41415E3C1C1C3C5E41415E3C1C5F2B5680555580562B2B5680555580562B0165366954333354693636695433335469364987683D3D6887494987683E3E688700000001004AFFF0028802CA0011002FBA000A000B00032BB8000A10BA0001000200032BB800011000B800012FB8000A2FBA0006000F00032BB8000610303101112311140623222635112311141633323602885F5F5B60665F9B8A8792010201C8FE386063636001C8FE388F838900020024FFF5020E


001C08B1FC49FE8007C300010000000000000000000000000000001101F40033011600000116005302D2004E0103005202F8002602D2004A025100240219002400DE0045022C00400251004301F4001F013B0009022C004003E8006F04BE00370000004800480062009E00B80158018E022C029402BE0306039E0442049404E4053C05720001000000110096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 17 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/H 3 def
/I 4 def
/O 5 def
/U 6 def
/d 7 def
/e 8 def
/i 9 def
/n 10 def
/p 11 def
/s 12 def
/t 13 def
/u 14 def
/ellipsis 15 def
/uni2B91 16 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec


AF78DD116970069F2540FC09C1ACBA3E85039566BD33AE344EB7DA9F97334BC0E471CF11A8C7147D4BF7302308E1D4AE763439187EBAB128EB64EFEF4BCB9BFD1FD0601A92B75BBBE98AE0224285817DF46A1F4D046D3C8CE84215DA1CF1A3645D8DD285B36EAE74F7A82270F24BB19F0787898DE561CF60879E5B238CFE20AFEC99F6AF734C11C11D6F8F55BC99AC966BD16A3400C0288254A5B32749CCCF82A1E8E4968B02CA38ADD2D424FDEC912305D2ECEB71A41CB1856E6ABD5C555FAFADEB3CB2D19B02C518F4987459176C385DF303511071FFD8DB25BC558E8DE1818AF082005918D4B4B59BF7DA281C4D1E3AFBFC0C6DCB6728C10A3088F4BF6AE9E469823F9A1C56762A9F36A2DD5FB10A965BC9E5E26CC5BC9A38EA99F054A1764B69A31EBF73047ABC6A9A20B65AA3E90D305435FA46F77111BC526842F39BC209C38E3A810FF67E9F90655DC4C1AF10AC638CCB32EBE2660C8939049115A3029B0F0C4F4F6928743A53091095AE5DB2C5CF75DAAD1EAC303F1844B62F8867E0F13538E81A4AD4F2AA8A959EAD4416F76F9F806FC3461988879073161A422B96964E9F073991C1F2D4D2BCDCCA4085073AAE1D65A300915A7D0A884FB105B5CE5A9F140D04A8FA21B424B8A570FD4DF95543BB8F2C3BA59C2B2AD8CFBD52597C2E18E908F206FEB0E1D82328A3C53D58CA327B1624D397E2A33875345C3995BDB2E7C103F38E48087126D0B607CCBE1FAFFA92D05FD9182E9B9308F221DC913922C7258A0EB6032C0D64FCC2CC90E20AFE39605390F42506EF7EEBBB1997CB1D31D4C0E8553775B1D064215A9D73C7DE0E4410E5881B976628DA1F88607A76306B507359104FBED0611C2D323C55B990016C9510E8D007FB557DFC8F8755697CA9C888E3BFB52D60404C6C6A75A887609BD9DE1B0828C8ED4B99F5ABB97F05FC6120412F8FC3B65F10C7AD3D99962B5CAD5D0EE168119099D8DE31E7BEE3B534C4B43536C437A8D9607F5F381D712741ED02B7732773BFEE92A13C38D632445EF98D9603564E284B2963E8A216C67DF58810DD5BDD2E21582238FDBD0401A06C194C87D24CEE328994F6F4831AC7BB7274F3A975114285C77CB537A55C08AF0B455860B74505D39A74A63352EA00597D7AFBAF2BA8116304858F73271F42
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Italic
%!FontType1-1.0: HelveticaNeue-Italic 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /y put
dup 34 /x put
dup 35 /one put
dup 36 /two put
dup 37 /n put
dup 38 /m put
dup 39 /k put
dup 40 /w put
dup 41 /T put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -993 1 index div -481 2 index div 1511 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/one 1 def
/two 2 def
/T 3 def
/k 4 def
/m 5 def
/n 6 def
/w 7 def
/x 8 def
/y 9 def
/u20BC 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-993 -481 1511 1077}def
/UniqueID 4265036 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B5BF8E443649147905228038171EB73F3E0B647FF27DF9EB6CBB52D7BA427F252DF81FEB9E3AD677E2740C382AB48C21C03654FE91AB0D9C17024553E984C71341138E279C58A892AB114F3362BD44E5AD33091A62609A5CC22D7348E115A2A34766D3B1DAD1C96159D59961BEB17C77A2DAACDA30684C9BDD8221B7CE9BA5F55AF0515F0B3AA81937A976EE5AFA8F24864F9156A45ACB2B5D6185ABBD162B6CDBD4C0CBEB104E39FC3DBCAB07C04E9DBC6713AE2CB0FF9816180D6781088BD0F3289074A2BF4812868F2629066B7FA272EA6321E023BBE9D96DB8B77FBC232084513BBEAFD8C4DC5F746051931CBB8308D240D299EE50B149E7A81B12C39A884CA503C28F12115436B0BC410185C99C352516FA79B845E039AA478160141FF706F91BDF198909CE85F458499D8F3ED187B8BD944C86DC01D16BFD6326B47719C2E2E0CC86CCD5FCD1437BA044690EE3B843FE5613E59CEC692780724040C06ADEE5A9C3C7D6E8E1A3832BDC9D0F7F4EBA8123BCEC0746ED7848B6E562B9961990BE5747B36918861AE25B5A0160AF8C717D810E19BCD35B176E726C608C7691F97662C3F9DC4B22EADB73A7774759A266730DFAE197529C00A62D8017B9611DB2411403B2B5509112F47B88763CE809B7969817D75E1D90215A8275744D34AD5A1782DA8EBF0DEBD7B323C3C02AB519B5B1583654F8F9A551979FA2149DD59BD81CE9479B65AC2008A0F438BA3B6025D2D2C8DEB6313044B444D68BA0E27EE2

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Italic cguidfix
/F2.1/HelveticaNeue-Italic renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 668 388 rc
-29 479 m
1915 479 l
1915 -627 l
-29 -627 l
h
-29 479 m
f
194.45581 324.45581 m
208.51476 310.39694 208.51476 287.60306 194.45581 273.54419 c
180.39696 259.48526 157.60304 259.48526 143.54419 273.54419 c
129.48524 287.60306 129.48524 310.39694 143.54419 324.45581 c
157.60304 338.51474 180.39696 338.51474 194.45581 324.45581 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -29 479 cm
223.45581 154.54419 m
237.51476 168.60304 237.51476 191.39696 223.45581 205.45581 c
209.39696 219.51476 186.60304 219.51476 172.54419 205.45581 c
158.48524 191.39696 158.48524 168.60304 172.54419 154.54419 c
186.60304 140.48524 209.39696 140.48524 223.45581 154.54419 c
S
0 i
1 1 1 sc
CM
194.45581 216.45581 m
208.51476 202.39696 208.51476 179.60304 194.45581 165.54419 c
180.39696 151.48524 157.60304 151.48524 143.54419 165.54419 c
129.48524 179.60304 129.48524 202.39696 143.54419 216.45581 c
157.60304 230.51476 180.39696 230.51476 194.45581 216.45581 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -29 479 cm
223.45581 262.54419 m
237.51476 276.60306 237.51476 299.39694 223.45581 313.45581 c
209.39696 327.51474 186.60304 327.51474 172.54419 313.45581 c
158.48524 299.39694 158.48524 276.60306 172.54419 262.54419 c
186.60304 248.48524 209.39696 248.48524 223.45581 262.54419 c
S
0 i
1 1 1 sc
CM
194.45581 63.455814 m
208.51476 49.396954 208.51476 26.603048 194.45581 12.544184 c
180.39696 -1.514752 157.60304 -1.514752 143.54419 12.544184 c
129.48524 26.603048 129.48524 49.396954 143.54419 63.455814 c
157.60304 77.514755 180.39696 77.514755 194.45581 63.455814 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -29 479 cm
223.45581 415.54419 m
237.51476 429.60306 237.51476 452.39694 223.45581 466.45581 c
209.39696 480.51474 186.60304 480.51474 172.54419 466.45581 c
158.48524 452.39694 158.48524 429.60306 172.54419 415.54419 c
186.60304 401.48526 209.39696 401.48526 223.45581 415.54419 c
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 178 114.5 cm
/F1.1[ 36 0 0 -36 0 0]sf
-23.004 12.496002 m
(!")[ 36.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
374.45581 261.45581 m
388.51474 247.39696 388.51474 224.60304 374.45581 210.54419 c
360.39694 196.48524 337.60306 196.48524 323.54419 210.54419 c
309.48526 224.60304 309.48526 247.39696 323.54419 261.45581 c
337.60306 275.51474 360.39694 275.51474 374.45581 261.45581 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -29 479 cm
403.45581 217.54419 m
417.51474 231.60304 417.51474 254.39696 403.45581 268.45581 c
389.39694 282.51474 366.60306 282.51474 352.54419 268.45581 c
338.48526 254.39696 338.48526 231.60304 352.54419 217.54419 c
366.60306 203.48524 389.39694 203.48524 403.45581 217.54419 c
S
0 i
1 1 1 sc
CM
374.45581 117.45582 m
388.51474 103.39695 388.51474 80.60305 374.45581 66.544182 c
360.39694 52.485249 337.60306 52.485249 323.54419 66.544182 c
309.48526 80.60305 309.48526 103.39695 323.54419 117.45582 c
337.60306 131.51476 360.39694 131.51476 374.45581 117.45582 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -29 479 cm
403.45581 361.54419 m
417.51474 375.60306 417.51474 398.39694 403.45581 412.45581 c
389.39694 426.51474 366.60306 426.51474 352.54419 412.45581 c
338.48526 398.39694 338.48526 375.60306 352.54419 361.54419 c
366.60306 347.48526 389.39694 347.48526 403.45581 361.54419 c
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 358 164 cm
-23.004 12.496002 m
(!")[ 36.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -29 479 cm
231.98671 191.89536 m
334.6691 227.83418 l
S
0 i
CM
313.21994 248.52301 m
306.66013 253.99739 l
304.67804 248.33424 l
h
313.21994 248.52301 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
342.21994 230.47699 m
335.66013 225.00261 l
333.67804 230.66576 l
h
342.21994 230.47699 m
S
1 J
1 j
0.60000002 i
232.9304 279.2674 m
333.46518 254.1337 l
S
0 i
CM
312.22632 226.80658 m
303.73758 227.77672 l
305.19278 221.95587 l
h
312.22632 226.80658 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
341.22632 252.19342 m
332.73758 251.22328 l
334.19278 257.04413 l
h
341.22632 252.19342 m
S
1 J
1 j
0.60000002 i
229.55194 305.35358 m
337.77353 364.87543 l
S
0 i
CM
315.78323 110.26922 m
310.21927 116.75321 l
307.32776 111.49592 l
h
315.78323 110.26922 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
344.78323 368.73077 m
339.21927 362.2468 l
336.32776 367.50409 l
h
344.78323 368.73077 m
S
1 J
1 j
0.60000002 i
232.48843 430.65347 m
334.02908 400.19128 l
S
0 i
CM
312.69171 81.107513 m
304.16705 81.682205 l
305.89114 75.935249 l
h
312.69171 81.107513 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
341.69171 397.89249 m
333.16705 397.31778 l
334.89114 403.06476 l
h
341.69171 397.89249 m
S
1 J
1 j
0.60000002 i
221.62337 207.16687 m
347.88046 352.36252 l
S
0 i
CM
324.12988 120.60062 m
321.14429 128.606 l
316.61664 124.66894 l
h
324.12988 120.60062 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
353.12988 358.39938 m
350.14429 350.39398 l
345.61664 354.33105 l
h
353.12988 358.39938 m
S
1 J
1 j
0.60000002 i
222.21669 414.36163 m
347.12384 276.96378 l
S
0 i
CM
323.50522 207.95575 m
315.90402 204.05424 l
320.34366 200.0182 l
h
323.50522 207.95575 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
352.50522 271.04425 m
344.90402 274.94574 l
349.34366 278.98178 l
h
352.50522 271.04425 m
S
/Cs2 SC
0 sc
1 0 0 -1 169.0625 366.32297 cm
/F1.1[ 27 0 0 -27 0 0]sf
-37.516499 9.6220016 m
(#$%&'\()[ 6.993000 15.012000 16.011000 15.012000 8.505000 0.000000 ] xS
1 0 0 -1 355 366.11243 cm
-78.515999 9.6220016 m
(\)*++,$-.$*'\()[ 19.494000 5.994000 16.011000 16.011000 14.499000 15.012000 7.506000 19.494000 15.012000 5.994000 8.505000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
554.45581 189.45581 m
568.51477 175.39696 568.51477 152.60304 554.45581 138.54419 c
540.39697 124.48524 517.60303 124.48524 503.54419 138.54419 c
489.48526 152.60304 489.48526 175.39696 503.54419 189.45581 c
517.60303 203.51476 540.39697 203.51476 554.45581 189.45581 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -29 479 cm
583.45581 289.54419 m
597.51477 303.60306 597.51477 326.39694 583.45581 340.45581 c
569.39697 354.51474 546.60303 354.51474 532.54419 340.45581 c
518.48523 326.39694 518.48523 303.60306 532.54419 289.54419 c
546.60303 275.48526 569.39697 275.48526 583.45581 289.54419 c
S
411.43372 256.3735 m
515.37433 297.94974 l
S
0 i
CM
493.80215 178.07913 m
487.48853 183.83569 l
485.26019 178.26483 l
h
493.80215 178.07913 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
522.80219 300.92087 m
516.48853 295.16431 l
514.26019 300.73517 l
h
522.80219 300.92087 m
S
1 J
1 j
0.60000002 i
411.43372 373.6265 m
515.37433 332.05026 l
S
0 i
CM
493.80215 149.92087 m
485.26019 149.73517 l
487.48853 144.16431 l
h
493.80215 149.92087 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
522.80219 329.07913 m
514.26019 329.26483 l
516.48853 334.83569 l
h
522.80219 329.07913 m
S
1 J
1 j
0.60000002 i
594 315 m
656.09998 315 l
S
0 i
CM
635.09998 164 m
627.09998 167 l
627.09998 161 l
h
635.09998 164 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
664.09998 315 m
656.09998 312 l
656.09998 318 l
h
664.09998 315 m
S
/Cs2 SC
0 sc
1 0 0 -1 655.0625 168 cm
/F2.1[ 30 0 0 -30 0 0]sf
-7.2150002 11.080002 m
(!)s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -29 479 cm
72 180 m
152.09998 180 l
S
0 i
CM
131.09998 299 m
123.09998 302 l
123.09998 296 l
h
131.09998 299 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
160.09998 180 m
152.09998 177 l
152.09998 183 l
h
160.09998 180 m
S
1 J
1 j
0.60000002 i
72 288 m
152.09998 288 l
S
0 i
CM
131.09998 191 m
123.09998 194 l
123.09998 188 l
h
131.09998 191 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
160.09998 288 m
152.09998 285 l
152.09998 291 l
h
160.09998 288 m
S
1 J
1 j
0.60000002 i
72 441 m
152.09998 441 l
S
0 i
CM
131.09998 38 m
123.09998 41 l
123.09998 35 l
h
131.09998 38 m
f
0 J
0 j
1 0 0 -1 -29 479 cm
160.09998 441 m
152.09998 438 l
152.09998 444 l
h
160.09998 441 m
S
/Cs2 SC
0 sc
1 0 0 -1 21.5 296 cm
-15.555 4.0800018 m
(")s
-1.125 18.080002 m
(#)s
1 0 0 -1 21.5 197 cm
-15.555 4.0800018 m
(")s
-1.125 18.080002 m
($)s
1 0 0 -1 22 32 cm
-15.555 4.0800018 m
(")s
-1.125 18.080002 m
(%)s
1 0 0 -1 384.5 287 cm
-21.120001 4.0800018 m
(&)s
4.4400001 18.080002 m
(#)s
1 0 0 -1 374 32 cm
-19.995001 4.0800018 m
(&)s
5.5650001 18.080002 m
(')s
1 0 0 -1 268 296 cm
-28.065001 4.0800018 m
(\()s
-5.2950001 18.080002 m
(##)[ 16.680000 0.000000 ] xS
1 0 0 -1 259 32 cm
-26.940001 4.0800018 m
(\()s
-4.1700001 18.080002 m
(%')[ 16.680000 0.000000 ] xS
1 0 0 -1 532 366.11243 cm
/F1.1[ 27 0 0 -27 0 0]sf
-48.532501 9.6220016 m
(/&'%&'\()[ 20.520000 15.012000 8.505000 16.011000 15.012000 8.505000 0.000000 ] xS
1 0 0 -1 455 98 cm
/F2.1[ 30 0 0 -30 0 0]sf
-15.825 4.0800018 m
(\))s
1.395 18.080002 m
(')s
1 0 0 -1 454.8793 221 cm
-16.950001 4.0800018 m
(\))s
0.27000001 18.080002 m
(#)s
ep
end
%%Trailer
%%EOF
